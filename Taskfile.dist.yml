version: "3"

vars:
  JWT_SIGNING_KEY:
    sh: "echo ${JWT_SIGNING_KEY:-tZtdk2HM4YGrmplrguqw23oilOG1QKgVTAw9udHi}"
  YOUR_HOST_ID: "01JBFPFH91WRC352YPQD8P4NHE"

tasks:
  migration:
    desc: create a new migration
    preconditions:
    - sh: '[[ -n "${NAME}" ]]'
      msg: 'Must specify $NAME'
    cmds:
    - task: migrate-sqlite
      vars:
        NAME: "$NAME"

  migrate-sqlite:
    internal: true
    dir: internal/storage/sqlite-migrations
    cmds:
    - migrate create -ext sql {{ .NAME }}

  mocks:
    desc: Generate unit test mocks
    cmds:
    - mockery

  build-controller:
    desc: build the controller binary
    cmds:
    - CGO_ENABLED=0 go build -o plantr-controller ./cmd/controller

  build-agent:
    desc: build the agent binary
    cmds:
    - CGO_ENABLED=0 go build -o plantr-agent ./cmd/agent

  build-cli:
    desc: build the cli
    cmds:
    - CGO_ENABLED=0 go build -o plantr ./cmd/cli

  run-controller:
    desc: run controller locally
    env:
      SQLITE_DB_PATH: "local.db"
      STORAGE_TYPE: "sqlite"
      JWT_SIGNING_KEY: "{{ .JWT_SIGNING_KEY }}"
      #LOG_REQUESTS: "T"
      #LOG_RESPONSES: "T"
      LOG_FORMAT: "human"
      GIT_URL: "https://github.com/nicjohnson145/plantr-test-repo"
      LOG_LEVEL: "trace"
      GIT_TYPE: "static"
      GIT_STATIC_CHECKOUT_PATH:
        sh: "echo ${CHECKOUT}"
    preconditions:
    - sh: '[[ -n "${CHECKOUT}" ]]'
      msg: 'Must specify $CHECKOUT'
    cmds:
    - task: build-controller
    - ./plantr-controller

  run-agent:
    desc: run agent locally
    env:
      #LOG_REQUESTS: "T"
      #LOG_RESPONSES: "T"
      LOG_FORMAT: "human"
      LOG_LEVEL: "trace"
      PRIVATE_KEY_PATH: "./hack/test-repo-keypairs/test-repo-key"
      NODE_ID: "{{ .YOUR_HOST_ID }}"
      PORT: "8090"
      CONTROLLER_ADDRESS: "http://localhost:8080"
    cmds:
    - task: build-agent
    - ./plantr-agent

  jwt:
    desc: Generate a JWT
    cmds:
    - >
      jwt encode --secret "{{ .JWT_SIGNING_KEY }}" '{"node_id": "{{ .YOUR_HOST_ID }}"}'