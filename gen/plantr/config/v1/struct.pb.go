// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: plantr/config/v1/struct.proto

package configv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigFile) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type GithubRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo          string                      `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	AssetPatterns *GithubRelease_AssetPattern `protobuf:"bytes,2,opt,name=asset_patterns,json=assetPatterns,proto3" json:"asset_patterns,omitempty"`
}

func (x *GithubRelease) Reset() {
	*x = GithubRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRelease) ProtoMessage() {}

func (x *GithubRelease) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRelease.ProtoReflect.Descriptor instead.
func (*GithubRelease) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{1}
}

func (x *GithubRelease) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GithubRelease) GetAssetPatterns() *GithubRelease_AssetPattern {
	if x != nil {
		return x.AssetPatterns
	}
	return nil
}

type Seed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Element:
	//
	//	*Seed_ConfigFile
	//	*Seed_GithubRelease
	Element isSeed_Element `protobuf_oneof:"element"`
}

func (x *Seed) Reset() {
	*x = Seed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seed) ProtoMessage() {}

func (x *Seed) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seed.ProtoReflect.Descriptor instead.
func (*Seed) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{2}
}

func (m *Seed) GetElement() isSeed_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (x *Seed) GetConfigFile() *ConfigFile {
	if x, ok := x.GetElement().(*Seed_ConfigFile); ok {
		return x.ConfigFile
	}
	return nil
}

func (x *Seed) GetGithubRelease() *GithubRelease {
	if x, ok := x.GetElement().(*Seed_GithubRelease); ok {
		return x.GithubRelease
	}
	return nil
}

type isSeed_Element interface {
	isSeed_Element()
}

type Seed_ConfigFile struct {
	ConfigFile *ConfigFile `protobuf:"bytes,1,opt,name=config_file,json=configFile,proto3,oneof"`
}

type Seed_GithubRelease struct {
	GithubRelease *GithubRelease `protobuf:"bytes,2,opt,name=github_release,json=githubRelease,proto3,oneof"`
}

func (*Seed_ConfigFile) isSeed_Element() {}

func (*Seed_GithubRelease) isSeed_Element() {}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seeds []*Seed `protobuf:"bytes,1,rep,name=seeds,proto3" json:"seeds,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{3}
}

func (x *Role) GetSeeds() []*Seed {
	if x != nil {
		return x.Seeds
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname     string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PublicKeyB64 string   `protobuf:"bytes,3,opt,name=public_key_b64,json=publicKeyB64,proto3" json:"public_key_b64,omitempty"`
	Roles        []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	UserHome     string   `protobuf:"bytes,5,opt,name=user_home,json=userHome,proto3" json:"user_home,omitempty"`
	BinDir       string   `protobuf:"bytes,6,opt,name=bin_dir,json=binDir,proto3" json:"bin_dir,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Node) GetPublicKeyB64() string {
	if x != nil {
		return x.PublicKeyB64
	}
	return ""
}

func (x *Node) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Node) GetUserHome() string {
	if x != nil {
		return x.UserHome
	}
	return ""
}

func (x *Node) GetBinDir() string {
	if x != nil {
		return x.BinDir
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles map[string]*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Nodes []*Node          `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{5}
}

func (x *Config) GetRoles() map[string]*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Config) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GithubRelease_AssetPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Linux *GithubRelease_AssetPattern_ArchPattern `protobuf:"bytes,1,opt,name=linux,proto3" json:"linux,omitempty"`
	Mac   *GithubRelease_AssetPattern_ArchPattern `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *GithubRelease_AssetPattern) Reset() {
	*x = GithubRelease_AssetPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRelease_AssetPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRelease_AssetPattern) ProtoMessage() {}

func (x *GithubRelease_AssetPattern) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRelease_AssetPattern.ProtoReflect.Descriptor instead.
func (*GithubRelease_AssetPattern) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GithubRelease_AssetPattern) GetLinux() *GithubRelease_AssetPattern_ArchPattern {
	if x != nil {
		return x.Linux
	}
	return nil
}

func (x *GithubRelease_AssetPattern) GetMac() *GithubRelease_AssetPattern_ArchPattern {
	if x != nil {
		return x.Mac
	}
	return nil
}

type GithubRelease_AssetPattern_ArchPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X86 string `protobuf:"bytes,1,opt,name=x86,proto3" json:"x86,omitempty"`
	Arm string `protobuf:"bytes,2,opt,name=arm,proto3" json:"arm,omitempty"`
}

func (x *GithubRelease_AssetPattern_ArchPattern) Reset() {
	*x = GithubRelease_AssetPattern_ArchPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_config_v1_struct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRelease_AssetPattern_ArchPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRelease_AssetPattern_ArchPattern) ProtoMessage() {}

func (x *GithubRelease_AssetPattern_ArchPattern) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_config_v1_struct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRelease_AssetPattern_ArchPattern.ProtoReflect.Descriptor instead.
func (*GithubRelease_AssetPattern_ArchPattern) Descriptor() ([]byte, []int) {
	return file_plantr_config_v1_struct_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *GithubRelease_AssetPattern_ArchPattern) GetX86() string {
	if x != nil {
		return x.X86
	}
	return ""
}

func (x *GithubRelease_AssetPattern_ArchPattern) GetArm() string {
	if x != nil {
		return x.Arm
	}
	return ""
}

var File_plantr_config_v1_struct_proto protoreflect.FileDescriptor

var file_plantr_config_v1_struct_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x22, 0x42, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x02, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x53, 0x0a, 0x0e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x1a, 0xdd, 0x01, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x4e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x75,
	0x78, 0x12, 0x4a, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x41, 0x72, 0x63,
	0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x1a, 0x31, 0x0a,
	0x0b, 0x41, 0x72, 0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x78, 0x38, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x38, 0x36, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x6d,
	0x22, 0x9c, 0x01, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x34, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x52, 0x05,
	0x73, 0x65, 0x65, 0x64, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x36, 0x34,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x68,
	0x6f, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x48,
	0x6f, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x44, 0x69, 0x72, 0x22, 0xc3, 0x01, 0x0a,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x1a, 0x50, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0xc4, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x63, 0x6a, 0x6f, 0x68, 0x6e, 0x73, 0x6f,
	0x6e, 0x31, 0x34, 0x35, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x43, 0x58, 0xaa,
	0x02, 0x10, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x10, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x5c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x5c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x3a, 0x3a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_plantr_config_v1_struct_proto_rawDescOnce sync.Once
	file_plantr_config_v1_struct_proto_rawDescData = file_plantr_config_v1_struct_proto_rawDesc
)

func file_plantr_config_v1_struct_proto_rawDescGZIP() []byte {
	file_plantr_config_v1_struct_proto_rawDescOnce.Do(func() {
		file_plantr_config_v1_struct_proto_rawDescData = protoimpl.X.CompressGZIP(file_plantr_config_v1_struct_proto_rawDescData)
	})
	return file_plantr_config_v1_struct_proto_rawDescData
}

var file_plantr_config_v1_struct_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_plantr_config_v1_struct_proto_goTypes = []any{
	(*ConfigFile)(nil),                 // 0: plantr.config.v1.ConfigFile
	(*GithubRelease)(nil),              // 1: plantr.config.v1.GithubRelease
	(*Seed)(nil),                       // 2: plantr.config.v1.Seed
	(*Role)(nil),                       // 3: plantr.config.v1.Role
	(*Node)(nil),                       // 4: plantr.config.v1.Node
	(*Config)(nil),                     // 5: plantr.config.v1.Config
	(*GithubRelease_AssetPattern)(nil), // 6: plantr.config.v1.GithubRelease.AssetPattern
	(*GithubRelease_AssetPattern_ArchPattern)(nil), // 7: plantr.config.v1.GithubRelease.AssetPattern.ArchPattern
	nil, // 8: plantr.config.v1.Config.RolesEntry
}
var file_plantr_config_v1_struct_proto_depIdxs = []int32{
	6, // 0: plantr.config.v1.GithubRelease.asset_patterns:type_name -> plantr.config.v1.GithubRelease.AssetPattern
	0, // 1: plantr.config.v1.Seed.config_file:type_name -> plantr.config.v1.ConfigFile
	1, // 2: plantr.config.v1.Seed.github_release:type_name -> plantr.config.v1.GithubRelease
	2, // 3: plantr.config.v1.Role.seeds:type_name -> plantr.config.v1.Seed
	8, // 4: plantr.config.v1.Config.roles:type_name -> plantr.config.v1.Config.RolesEntry
	4, // 5: plantr.config.v1.Config.nodes:type_name -> plantr.config.v1.Node
	7, // 6: plantr.config.v1.GithubRelease.AssetPattern.linux:type_name -> plantr.config.v1.GithubRelease.AssetPattern.ArchPattern
	7, // 7: plantr.config.v1.GithubRelease.AssetPattern.mac:type_name -> plantr.config.v1.GithubRelease.AssetPattern.ArchPattern
	3, // 8: plantr.config.v1.Config.RolesEntry.value:type_name -> plantr.config.v1.Role
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_plantr_config_v1_struct_proto_init() }
func file_plantr_config_v1_struct_proto_init() {
	if File_plantr_config_v1_struct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plantr_config_v1_struct_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GithubRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Seed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GithubRelease_AssetPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_config_v1_struct_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GithubRelease_AssetPattern_ArchPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plantr_config_v1_struct_proto_msgTypes[2].OneofWrappers = []any{
		(*Seed_ConfigFile)(nil),
		(*Seed_GithubRelease)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plantr_config_v1_struct_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plantr_config_v1_struct_proto_goTypes,
		DependencyIndexes: file_plantr_config_v1_struct_proto_depIdxs,
		MessageInfos:      file_plantr_config_v1_struct_proto_msgTypes,
	}.Build()
	File_plantr_config_v1_struct_proto = out.File
	file_plantr_config_v1_struct_proto_rawDesc = nil
	file_plantr_config_v1_struct_proto_goTypes = nil
	file_plantr_config_v1_struct_proto_depIdxs = nil
}
