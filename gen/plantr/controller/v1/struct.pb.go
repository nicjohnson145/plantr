// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: plantr/controller/v1/struct.proto

package controllerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionType int32

const (
	VersionType_VERSION_TYPE_UNSPECIFIED VersionType = 0
	VersionType_VERSION_TYPE_PINNED      VersionType = 1
	VersionType_VERSION_TYPE_LATEST      VersionType = 2
)

// Enum value maps for VersionType.
var (
	VersionType_name = map[int32]string{
		0: "VERSION_TYPE_UNSPECIFIED",
		1: "VERSION_TYPE_PINNED",
		2: "VERSION_TYPE_LATEST",
	}
	VersionType_value = map[string]int32{
		"VERSION_TYPE_UNSPECIFIED": 0,
		"VERSION_TYPE_PINNED":      1,
		"VERSION_TYPE_LATEST":      2,
	}
)

func (x VersionType) Enum() *VersionType {
	p := new(VersionType)
	*p = x
	return p
}

func (x VersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_plantr_controller_v1_struct_proto_enumTypes[0].Descriptor()
}

func (VersionType) Type() protoreflect.EnumType {
	return &file_plantr_controller_v1_struct_proto_enumTypes[0]
}

func (x VersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionType.Descriptor instead.
func (VersionType) EnumDescriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{0}
}

type ConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ConfigFile) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type GithubRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl          string                        `protobuf:"bytes,1,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	Authentication       *GithubRelease_Authentication `protobuf:"bytes,2,opt,name=authentication,proto3" json:"authentication,omitempty"`
	DestinationDirectory string                        `protobuf:"bytes,3,opt,name=destination_directory,json=destinationDirectory,proto3" json:"destination_directory,omitempty"`
	NameOverride         *string                       `protobuf:"bytes,4,opt,name=name_override,json=nameOverride,proto3,oneof" json:"name_override,omitempty"`
	ArchiveRelease       bool                          `protobuf:"varint,5,opt,name=archive_release,json=archiveRelease,proto3" json:"archive_release,omitempty"`
}

func (x *GithubRelease) Reset() {
	*x = GithubRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRelease) ProtoMessage() {}

func (x *GithubRelease) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRelease.ProtoReflect.Descriptor instead.
func (*GithubRelease) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{1}
}

func (x *GithubRelease) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *GithubRelease) GetAuthentication() *GithubRelease_Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *GithubRelease) GetDestinationDirectory() string {
	if x != nil {
		return x.DestinationDirectory
	}
	return ""
}

func (x *GithubRelease) GetNameOverride() string {
	if x != nil && x.NameOverride != nil {
		return *x.NameOverride
	}
	return ""
}

func (x *GithubRelease) GetArchiveRelease() bool {
	if x != nil {
		return x.ArchiveRelease
	}
	return false
}

type SystemPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Pkg:
	//
	//	*SystemPackage_Apt
	Pkg isSystemPackage_Pkg `protobuf_oneof:"pkg"`
}

func (x *SystemPackage) Reset() {
	*x = SystemPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPackage) ProtoMessage() {}

func (x *SystemPackage) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPackage.ProtoReflect.Descriptor instead.
func (*SystemPackage) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{2}
}

func (m *SystemPackage) GetPkg() isSystemPackage_Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

func (x *SystemPackage) GetApt() *SystemPackage_AptPkg {
	if x, ok := x.GetPkg().(*SystemPackage_Apt); ok {
		return x.Apt
	}
	return nil
}

type isSystemPackage_Pkg interface {
	isSystemPackage_Pkg()
}

type SystemPackage_Apt struct {
	Apt *SystemPackage_AptPkg `protobuf:"bytes,1,opt,name=apt,proto3,oneof"`
}

func (*SystemPackage_Apt) isSystemPackage_Pkg() {}

type GitRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Types that are assignable to Ref:
	//
	//	*GitRepo_Tag
	//	*GitRepo_Commit
	Ref isGitRepo_Ref `protobuf_oneof:"ref"`
}

func (x *GitRepo) Reset() {
	*x = GitRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepo) ProtoMessage() {}

func (x *GitRepo) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepo.ProtoReflect.Descriptor instead.
func (*GitRepo) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{3}
}

func (x *GitRepo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitRepo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (m *GitRepo) GetRef() isGitRepo_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *GitRepo) GetTag() string {
	if x, ok := x.GetRef().(*GitRepo_Tag); ok {
		return x.Tag
	}
	return ""
}

func (x *GitRepo) GetCommit() string {
	if x, ok := x.GetRef().(*GitRepo_Commit); ok {
		return x.Commit
	}
	return ""
}

type isGitRepo_Ref interface {
	isGitRepo_Ref()
}

type GitRepo_Tag struct {
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3,oneof"`
}

type GitRepo_Commit struct {
	Commit string `protobuf:"bytes,4,opt,name=commit,proto3,oneof"`
}

func (*GitRepo_Tag) isGitRepo_Ref() {}

func (*GitRepo_Commit) isGitRepo_Ref() {}

type Golang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Golang) Reset() {
	*x = Golang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Golang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Golang) ProtoMessage() {}

func (x *Golang) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Golang.ProtoReflect.Descriptor instead.
func (*Golang) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{4}
}

func (x *Golang) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GoInstall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package string  `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Version *string `protobuf:"bytes,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *GoInstall) Reset() {
	*x = GoInstall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoInstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoInstall) ProtoMessage() {}

func (x *GoInstall) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoInstall.ProtoReflect.Descriptor instead.
func (*GoInstall) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{5}
}

func (x *GoInstall) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *GoInstall) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type Seed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Seed_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are assignable to Element:
	//
	//	*Seed_ConfigFile
	//	*Seed_GithubRelease
	//	*Seed_SystemPackage
	//	*Seed_GitRepo
	//	*Seed_Golang
	//	*Seed_GoInstall
	Element isSeed_Element `protobuf_oneof:"element"`
}

func (x *Seed) Reset() {
	*x = Seed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seed) ProtoMessage() {}

func (x *Seed) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seed.ProtoReflect.Descriptor instead.
func (*Seed) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{6}
}

func (x *Seed) GetMetadata() *Seed_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *Seed) GetElement() isSeed_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (x *Seed) GetConfigFile() *ConfigFile {
	if x, ok := x.GetElement().(*Seed_ConfigFile); ok {
		return x.ConfigFile
	}
	return nil
}

func (x *Seed) GetGithubRelease() *GithubRelease {
	if x, ok := x.GetElement().(*Seed_GithubRelease); ok {
		return x.GithubRelease
	}
	return nil
}

func (x *Seed) GetSystemPackage() *SystemPackage {
	if x, ok := x.GetElement().(*Seed_SystemPackage); ok {
		return x.SystemPackage
	}
	return nil
}

func (x *Seed) GetGitRepo() *GitRepo {
	if x, ok := x.GetElement().(*Seed_GitRepo); ok {
		return x.GitRepo
	}
	return nil
}

func (x *Seed) GetGolang() *Golang {
	if x, ok := x.GetElement().(*Seed_Golang); ok {
		return x.Golang
	}
	return nil
}

func (x *Seed) GetGoInstall() *GoInstall {
	if x, ok := x.GetElement().(*Seed_GoInstall); ok {
		return x.GoInstall
	}
	return nil
}

type isSeed_Element interface {
	isSeed_Element()
}

type Seed_ConfigFile struct {
	ConfigFile *ConfigFile `protobuf:"bytes,2,opt,name=config_file,json=configFile,proto3,oneof"`
}

type Seed_GithubRelease struct {
	GithubRelease *GithubRelease `protobuf:"bytes,3,opt,name=github_release,json=githubRelease,proto3,oneof"`
}

type Seed_SystemPackage struct {
	SystemPackage *SystemPackage `protobuf:"bytes,4,opt,name=system_package,json=systemPackage,proto3,oneof"`
}

type Seed_GitRepo struct {
	GitRepo *GitRepo `protobuf:"bytes,5,opt,name=git_repo,json=gitRepo,proto3,oneof"`
}

type Seed_Golang struct {
	Golang *Golang `protobuf:"bytes,6,opt,name=golang,proto3,oneof"`
}

type Seed_GoInstall struct {
	GoInstall *GoInstall `protobuf:"bytes,7,opt,name=go_install,json=goInstall,proto3,oneof"`
}

func (*Seed_ConfigFile) isSeed_Element() {}

func (*Seed_GithubRelease) isSeed_Element() {}

func (*Seed_SystemPackage) isSeed_Element() {}

func (*Seed_GitRepo) isSeed_Element() {}

func (*Seed_Golang) isSeed_Element() {}

func (*Seed_GoInstall) isSeed_Element() {}

type GithubRelease_Authentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BearerAuth string `protobuf:"bytes,1,opt,name=bearer_auth,json=bearerAuth,proto3" json:"bearer_auth,omitempty"`
}

func (x *GithubRelease_Authentication) Reset() {
	*x = GithubRelease_Authentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRelease_Authentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRelease_Authentication) ProtoMessage() {}

func (x *GithubRelease_Authentication) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRelease_Authentication.ProtoReflect.Descriptor instead.
func (*GithubRelease_Authentication) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GithubRelease_Authentication) GetBearerAuth() string {
	if x != nil {
		return x.BearerAuth
	}
	return ""
}

type SystemPackage_AptPkg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SystemPackage_AptPkg) Reset() {
	*x = SystemPackage_AptPkg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemPackage_AptPkg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPackage_AptPkg) ProtoMessage() {}

func (x *SystemPackage_AptPkg) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPackage_AptPkg.ProtoReflect.Descriptor instead.
func (*SystemPackage_AptPkg) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SystemPackage_AptPkg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Seed_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Seed_Metadata) Reset() {
	*x = Seed_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plantr_controller_v1_struct_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seed_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seed_Metadata) ProtoMessage() {}

func (x *Seed_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_plantr_controller_v1_struct_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seed_Metadata.ProtoReflect.Descriptor instead.
func (*Seed_Metadata) Descriptor() ([]byte, []int) {
	return file_plantr_controller_v1_struct_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Seed_Metadata) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

var File_plantr_controller_v1_struct_proto protoreflect.FileDescriptor

var file_plantr_controller_v1_struct_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x02, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x5a, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x31, 0x0a, 0x0e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x22, 0x74, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x61, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x74, 0x50, 0x6b, 0x67, 0x48, 0x00, 0x52, 0x03, 0x61,
	0x70, 0x74, 0x1a, 0x1c, 0x0a, 0x06, 0x41, 0x70, 0x74, 0x50, 0x6b, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x05, 0x0a, 0x03, 0x70, 0x6b, 0x67, 0x22, 0x6c, 0x0a, 0x07, 0x47, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x05,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x22, 0x22, 0x0a, 0x06, 0x47, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x09, 0x47, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x04, 0x0a, 0x04,
	0x53, 0x65, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x65, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x67, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x06, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x0a, 0x67, 0x6f,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48,
	0x00, 0x52, 0x09, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x1a, 0x1e, 0x0a, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x09, 0x0a, 0x07,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2a, 0x5d, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x41,
	0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x42, 0xe0, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x69, 0x63, 0x6a, 0x6f, 0x68, 0x6e, 0x73, 0x6f, 0x6e, 0x31, 0x34, 0x35, 0x2f, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x43, 0x58, 0xaa,
	0x02, 0x14, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x5c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x16, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_plantr_controller_v1_struct_proto_rawDescOnce sync.Once
	file_plantr_controller_v1_struct_proto_rawDescData = file_plantr_controller_v1_struct_proto_rawDesc
)

func file_plantr_controller_v1_struct_proto_rawDescGZIP() []byte {
	file_plantr_controller_v1_struct_proto_rawDescOnce.Do(func() {
		file_plantr_controller_v1_struct_proto_rawDescData = protoimpl.X.CompressGZIP(file_plantr_controller_v1_struct_proto_rawDescData)
	})
	return file_plantr_controller_v1_struct_proto_rawDescData
}

var file_plantr_controller_v1_struct_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plantr_controller_v1_struct_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_plantr_controller_v1_struct_proto_goTypes = []any{
	(VersionType)(0),                     // 0: plantr.controller.v1.VersionType
	(*ConfigFile)(nil),                   // 1: plantr.controller.v1.ConfigFile
	(*GithubRelease)(nil),                // 2: plantr.controller.v1.GithubRelease
	(*SystemPackage)(nil),                // 3: plantr.controller.v1.SystemPackage
	(*GitRepo)(nil),                      // 4: plantr.controller.v1.GitRepo
	(*Golang)(nil),                       // 5: plantr.controller.v1.Golang
	(*GoInstall)(nil),                    // 6: plantr.controller.v1.GoInstall
	(*Seed)(nil),                         // 7: plantr.controller.v1.Seed
	(*GithubRelease_Authentication)(nil), // 8: plantr.controller.v1.GithubRelease.Authentication
	(*SystemPackage_AptPkg)(nil),         // 9: plantr.controller.v1.SystemPackage.AptPkg
	(*Seed_Metadata)(nil),                // 10: plantr.controller.v1.Seed.Metadata
}
var file_plantr_controller_v1_struct_proto_depIdxs = []int32{
	8,  // 0: plantr.controller.v1.GithubRelease.authentication:type_name -> plantr.controller.v1.GithubRelease.Authentication
	9,  // 1: plantr.controller.v1.SystemPackage.apt:type_name -> plantr.controller.v1.SystemPackage.AptPkg
	10, // 2: plantr.controller.v1.Seed.metadata:type_name -> plantr.controller.v1.Seed.Metadata
	1,  // 3: plantr.controller.v1.Seed.config_file:type_name -> plantr.controller.v1.ConfigFile
	2,  // 4: plantr.controller.v1.Seed.github_release:type_name -> plantr.controller.v1.GithubRelease
	3,  // 5: plantr.controller.v1.Seed.system_package:type_name -> plantr.controller.v1.SystemPackage
	4,  // 6: plantr.controller.v1.Seed.git_repo:type_name -> plantr.controller.v1.GitRepo
	5,  // 7: plantr.controller.v1.Seed.golang:type_name -> plantr.controller.v1.Golang
	6,  // 8: plantr.controller.v1.Seed.go_install:type_name -> plantr.controller.v1.GoInstall
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_plantr_controller_v1_struct_proto_init() }
func file_plantr_controller_v1_struct_proto_init() {
	if File_plantr_controller_v1_struct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plantr_controller_v1_struct_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GithubRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SystemPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GitRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Golang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GoInstall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Seed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GithubRelease_Authentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SystemPackage_AptPkg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plantr_controller_v1_struct_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Seed_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plantr_controller_v1_struct_proto_msgTypes[1].OneofWrappers = []any{}
	file_plantr_controller_v1_struct_proto_msgTypes[2].OneofWrappers = []any{
		(*SystemPackage_Apt)(nil),
	}
	file_plantr_controller_v1_struct_proto_msgTypes[3].OneofWrappers = []any{
		(*GitRepo_Tag)(nil),
		(*GitRepo_Commit)(nil),
	}
	file_plantr_controller_v1_struct_proto_msgTypes[5].OneofWrappers = []any{}
	file_plantr_controller_v1_struct_proto_msgTypes[6].OneofWrappers = []any{
		(*Seed_ConfigFile)(nil),
		(*Seed_GithubRelease)(nil),
		(*Seed_SystemPackage)(nil),
		(*Seed_GitRepo)(nil),
		(*Seed_Golang)(nil),
		(*Seed_GoInstall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plantr_controller_v1_struct_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plantr_controller_v1_struct_proto_goTypes,
		DependencyIndexes: file_plantr_controller_v1_struct_proto_depIdxs,
		EnumInfos:         file_plantr_controller_v1_struct_proto_enumTypes,
		MessageInfos:      file_plantr_controller_v1_struct_proto_msgTypes,
	}.Build()
	File_plantr_controller_v1_struct_proto = out.File
	file_plantr_controller_v1_struct_proto_rawDesc = nil
	file_plantr_controller_v1_struct_proto_goTypes = nil
	file_plantr_controller_v1_struct_proto_depIdxs = nil
}
